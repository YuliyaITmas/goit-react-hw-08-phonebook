{"version":3,"file":"static/js/793.ac13b6ee.chunk.js","mappings":"uPAEaA,EAAYC,EAAAA,EAAAA,IAAH,+KAaTC,GAJYD,EAAAA,EAAAA,GAAH,kEAIDA,EAAAA,EAAAA,GAAH,6CAGLE,EAAgBF,EAAAA,EAAAA,IAAH,kJ,wJCdbG,GAAQH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,mRAaLK,EAAQL,EAAAA,EAAAA,MAAH,+GAOLM,GAAQN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,4WAoBLQ,EAASR,EAAAA,EAAAA,OAAH,2cAwBNS,GAAQT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,oG,SC1DLW,EAAc,WACzB,OASIC,EAAAA,EAAAA,MARFC,EADF,EACEA,OACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAC,EALF,EAKEA,WACAC,EANF,EAMEA,QACAC,EAPF,EAOEA,MACAC,EARF,EAQEA,aAGF,OACE,UAACjB,EAAD,CAAOkB,SAAUD,EAAjB,WACE,UAACf,EAAD,WAAO,QAEL,SAACC,EAAD,CACEgB,GAAG,OACHC,KAAK,OACLC,YAAY,aACZC,KAAK,OACLC,OAAQT,EACRU,SAAUb,EACVc,MAAOf,EAAOY,KACdI,QAAQ,oLACRC,MAAM,2IAEPf,EAAOU,MAAQT,EAAQS,OAAQ,SAAChB,EAAD,UAAQM,EAAOU,QAC/C,SAAChB,EAAD,CAAOgB,KAAK,OAAOM,UAAU,YAE/B,UAAC1B,EAAD,WAAO,UAEL,SAACC,EAAD,CACEgB,GAAG,SACHC,KAAK,MACLC,YAAY,eACZC,KAAK,SACLC,OAAQT,EACRU,SAAUb,EACVc,MAAOf,EAAOmB,OACdH,QAAQ,yFACRC,MAAM,iGAEPf,EAAOiB,QAAUhB,EAAQgB,SAAU,SAACvB,EAAD,UAAQM,EAAOiB,UACnD,SAACvB,EAAD,CAAOgB,KAAK,SAASM,UAAU,YAGjC,SAACvB,EAAD,CAAQe,KAAK,SAASU,UAAWd,IAAUD,EAA3C,SAAoD,kBAKzD,E,kDCrDKgB,EAAU,CACdC,MAAO,QACPC,SAAU,OACVC,cAAc,EACdC,SAAU,YACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,oBAAoB,EACpBC,cAAc,GAGHC,EAAc,WACzB,IAAcC,GAAaC,EAAAA,EAAAA,MAAnBC,KAER,GAAqDC,EAAAA,EAAAA,MAArD,eAAOC,EAAP,KAAgCC,EAAhC,KAAqBC,UA0BfC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1C7B,KAAM4B,EAAAA,KAEHE,IAAI,EAAG,sCACPC,IAAI,GAAI,sCACRC,QACC,mLACA,0IAEDC,SAAS,oBACZ1B,OAAQqB,EAAAA,KAELE,IAAI,EAAG,wCACPC,IAAI,GAAI,wCACRC,QACC,6EACA,gGAEDC,SAAS,wBAGd,OACE,SAAC,KAAD,CACEC,cAAe,CACblC,KAAM,GACNO,OAAQ,IAEVoB,iBAAkBA,EAClB/B,SApDiB,SAACR,EAAD,GAA4B,IAAjB+C,EAAgB,EAAhBA,UAQ9B,GAPwBf,EAASgB,MAC/B,SAAAC,GAAO,OACJA,EAAQrC,MACPqC,EAAQrC,KAAKsC,cAAcC,SACzBnD,EAAOY,KAAKsC,cAAcC,QAC7BF,EAAQ9B,QAAU8B,EAAQ9B,OAAOgC,SAAWnD,EAAOmB,OAAOgC,MAJtD,IASP,OAFAC,EAAAA,OAAAA,QAAA,UAAkBpD,EAAOY,KAAzB,2BAAwDS,QACxD0B,IAGA,IAAMM,EAAa,CACjB5C,IAAI6C,EAAAA,EAAAA,UACJ1C,KAAMZ,EAAOY,KACbO,OAAQnB,EAAOmB,QAGnBiB,EAAWiB,GACXN,GACD,EAyBC,SAQG,kBACC,gCACGV,IAAmB,SAACkB,EAAA,EAAD,IAAW,KAAC,SAACzD,EAAD,MAFnC,GAON,E,oBCrFY0D,EAAOrE,EAAAA,EAAAA,GAAH,qGASJsE,EAAOtE,EAAAA,EAAAA,GAAH,yVAmBJuE,EAAOvE,EAAAA,EAAAA,KAAH,mHAOJwE,EAASxE,EAAAA,EAAAA,KAAH,kEAKNyE,EAASzE,EAAAA,EAAAA,OAAH,4NAaN0E,EAAO1E,EAAAA,EAAAA,OAAH,4N,kDCrDJ2E,GAAU3E,EAAAA,EAAAA,IAAH,uOAaP4E,GAAe5E,EAAAA,EAAAA,IAAH,6FAKZM,GAAQN,EAAAA,EAAAA,MAAH,4ZAsBLQ,GAASR,EAAAA,EAAAA,OAAH,0dAyBN6E,GAAW7E,EAAAA,EAAAA,IAAH,yCAIR8E,GAAgB9E,EAAAA,EAAAA,IAAH,iGC3DpB+E,GAAYC,SAASC,cAAc,eAE5BC,GAAQ,SAAC,GAAwD,IAAtDC,EAAqD,EAArDA,OAAQC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eACtD,GAA4CC,EAAAA,EAAAA,UAASF,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,MAEAC,EAAAA,EAAAA,YAAU,WACRD,GAAkB,SAAAE,GAAW,yBACxBA,GACAN,EAFwB,GAI9B,GAAE,CAACA,IAEJ,IAAMvE,EAAe,SAAA8E,GACnB,MAAwBA,EAAMC,OAAtBpE,EAAR,EAAQA,KAAMG,EAAd,EAAcA,MAEd6D,GAAkB,SAAAE,GAAW,yBACxBA,GADwB,cAE1BlE,EAAOG,GAFmB,GAI9B,EAMKkE,GAAgBC,EAAAA,EAAAA,cACpB,SAAAH,GACqB,WAAfA,EAAMI,MACRZ,GAEH,GACD,CAACA,IAsBH,OAbAM,EAAAA,EAAAA,YAAU,WAGR,OAFAO,OAAOC,iBAAiB,UAAWJ,GAE5B,WAMLG,OAAOE,oBAAoB,WALL,SAAAP,GACD,WAAfA,EAAMI,MACRZ,GAEH,GAEF,CACF,GAAE,CAACU,EAAeV,KAEZgB,EAAAA,EAAAA,cACLjB,GACE,SAACR,GAAD,CAAS0B,QArBe,SAAAT,GACtBA,EAAMC,SAAWD,EAAMU,eACzBlB,GAEH,EAiBG,UACE,SAACR,GAAD,WACE,UAACC,GAAD,YACE,SAAC,GAAD,CACEtD,KAAK,OACLE,KAAK,OACLG,MAAO4D,EAAe/D,KACtBE,SAAUb,KAEZ,SAAC,GAAD,CACES,KAAK,OACLE,KAAK,SACLG,MAAO4D,EAAexD,OACtBL,SAAUb,KAEZ,UAACgE,GAAD,YACE,SAAC,GAAD,CAAQuB,QAlDD,WACjBf,EAAeE,EAChB,EAgDW,SAA6B,UAC7B,SAAC,GAAD,CAAQa,QAASjB,EAAjB,SAA0B,qBAKhC,KACJL,GAEH,EC5EYwB,GAAc,WACzB,OAAsChB,EAAAA,EAAAA,WAAS,GAA/C,eAAOiB,EAAP,KAAoBC,EAApB,KACA,GAA0ClB,EAAAA,EAAAA,UAAS,MAAnD,eAAOF,EAAP,KAAsBqB,EAAtB,KAGMC,EAAa,kBAAMF,GAAe,EAArB,EAEnB,GAA6C3D,EAAAA,EAAAA,MAA/BD,EAAd,EAAQE,KAAgBI,EAAxB,EAAwBA,UAAWyD,EAAnC,EAAmCA,MAEnC,GACEC,EAAAA,EAAAA,MADF,eAAOC,EAAP,KAAoCC,EAApC,KAAyB5D,UAGnB6D,GAASC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,MAAV,IAE5BG,EAAmBtE,EAEvB,GAAImE,GAA4B,KAAlBA,EAAOhD,OAAe,CAClC,IAAMoD,EAAmBJ,EAAOjD,cAAcC,OAE9CmD,EAAmBA,EAAiBH,QAClC,SAAAlD,GAAO,OACJA,EAAQrC,MACPqC,EAAQrC,KAAKsC,cAAcsD,SAASD,IACrCtD,EAAQwD,OAASxD,EAAQwD,MAAMD,SAASD,EAHpC,GAKV,CAED,IAGA,GACEG,EAAAA,EAAAA,MADF,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBtE,UAElBuE,EAAa,SAAApG,GACjB,IAAM+D,EAAgB8B,EAAiBQ,MAAK,SAAA7D,GAAO,OAAIA,EAAQxC,KAAOA,CAAnB,IACnDoF,EAAiBrB,GA9BKoB,GAAe,EAgCtC,EAmBD,OACE,gCACGG,IAAS,0BAAI,UAAQA,EAAMgB,WAC3BzE,GAAasE,GACZ,SAACrD,EAAA,EAAD,KAEA,SAACC,EAAD,UACGxB,GACCsE,EAAiBU,KAAI,YAA2B,IAAxBpG,EAAuB,EAAvBA,KAAMO,EAAiB,EAAjBA,OAAQV,EAAS,EAATA,GACpC,OACE,UAACgD,EAAD,YACE,UAACC,EAAD,WAAO9C,EAAK,QACZ,4BACE,SAAC,EAAD,UAASO,KACT,SAAC0C,EAAD,CACEnD,KAAK,SACL8E,QAAS,kBAAMqB,EAAWpG,EAAjB,EACT,aAAW,eACXW,SAAUkB,EAJZ,UAME,SAAC,MAAD,CAAQ2E,KAAM,QAEhB,SAACrD,EAAD,CACElD,KAAK,SACL8E,QAAS,kBApDR,SAAA/E,GACnBwF,EAAexF,EAChB,CAkDkCyG,CAAazG,EAAnB,EACT,aAAW,iBACXW,SAAU8E,GAAqB5D,EAJjC,SAMG4D,GACC,SAAC,KAAD,CAAe5E,MAAM,KAAK6F,YAAY,UAEtC,SAAC,MAAD,CAAaF,KAAM,YArBhBxG,EA2Bd,MAIN+D,IACC,SAACH,GAAD,CACEC,OAAQqB,EACRpB,QAASuB,EACTtB,cAAeA,EACfC,eA/De,SAAAE,GACrBgC,EAAc,CACZlG,GAAIkE,EAAelE,GACnBkE,eAAgB,CACd/D,KAAM+D,EAAe/D,KACrBO,OAAQwD,EAAexD,UAGxBiG,SACAC,MAAK,WACJvB,GACD,IACAwB,OAAM,SAAAvB,GACLwB,QAAQC,IAAI,0BAA2BzB,EACxC,GACJ,MAqDF,ECxHY0B,GAAkBtI,EAAAA,EAAAA,IAAH,+GAOfuI,GAAcvI,EAAAA,EAAAA,MAAH,kEAKXwI,GAAcxI,EAAAA,EAAAA,MAAH,iY,WCVXyI,GAAS,WACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAACL,GAAD,WACE,UAACC,GAAD,WAAa,yBAEX,SAACC,GAAD,CACEjH,KAAK,OACLI,SAVa,SAAAiE,GACnB8C,GAASE,EAAAA,GAAAA,GAAUhD,EAAMC,OAAOjE,OACjC,EASOJ,YAAY,gCAKrB,E,sBChBc,SAASqH,KACtB,OACE,SAAC,MAAD,WACE,UAAC,MAAD,YACE,SAAC,MAAD,WACE,2BAAO,qBAET,SAAC,MAAD,UAAO,eACP,SAACjG,EAAD,KACA,SAAC,MAAD,UAAO,cACP,SAAC6F,GAAD,KACA,SAAClC,GAAD,QAIP,C","sources":["components/App.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/FormContext.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  color: #010101;\n  gap: 50px;\n  margin-top: 50px;\n`;\nexport const MainTitle = styled.h1`\n  font-size: 60px;\n  font-weight: bold;\n`;\nexport const Title = styled.h2`\n  font-size: 50px;\n`;\nexport const ContainerHome = styled.div`\nmargin-left:auto;\nmargin-right:auto;\n  text-align: center;\n  max-width: 500px;\n  color: #010101;\n  margin-top: 50px;\n`;\n","import styled from '@emotion/styled';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const Forma = styled(Form)`\n  display: flex;\n  gap: 30px;\n  flex-direction: column;\n  align-items: center;\n  width: 460px;\n  padding: 50px 20px;\n  // border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  // background-color: white;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 26px;\n  font-weight: bold;\n`;\n\nexport const Input = styled(Field)`\n  padding: 8px;\n  border: 1px solid #ccc;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  font-size: 24px;\n  width: 100%;\n  margin-top: 5px;\n  transition: all 0.4s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #444;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 20px;\n  font-weight: bold;\n  cursor: pointer;\n  text-transform: uppercase;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  transition: all 0.4s ease-in-out;\n\n  &:hover {\n    background-color: #333;\n    transform: scale(1.05);\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n  margin-top: 5px;\n  max-width: 200px;\n`;\n\n","import { useFormikContext } from 'formik';\n\nimport {\n  Forma,\n  Label,\n  Input,\n  Button,\n  Error,\n} from 'components/ContactForm/ContactForm.styled';\n\nexport const FormContext = () => {\n  const {\n    values,\n    handleChange,\n    errors,\n    touched,\n    handleBlur,\n    isValid,\n    dirty,\n    handleSubmit,\n  } = useFormikContext();\n\n  return (\n    <Forma onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          id=\"name\"\n          type=\"text\"\n          placeholder=\"Enter name\"\n          name=\"name\"\n          onBlur={handleBlur}\n          onChange={handleChange}\n          value={values.name}\n          pattern=\"^[А-Яа-яЁёіІїЇґҐa-zA-Z]+([-\\s][А-Яа-яЁёіІїЇґҐa-zA-Z]+)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n        {errors.name && touched.name && <Error>{errors.name}</Error>}\n        <Error name=\"name\" component=\"div\" />\n      </Label>\n      <Label>\n        Number\n        <Input\n          id=\"number\"\n          type=\"tel\"\n          placeholder=\"Enter number\"\n          name=\"number\"\n          onBlur={handleBlur}\n          onChange={handleChange}\n          value={values.number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        />\n        {errors.number && touched.number && <Error>{errors.number}</Error>}\n        <Error name=\"number\" component=\"div\" />\n      </Label>\n\n      <Button type=\"submit\" disabled={!dirty || !isValid}>\n        Add contact\n      </Button>\n    </Forma>\n  );\n};\n","import { Formik } from 'formik';\nimport { FormContext } from 'components/ContactForm/FormContext';\nimport * as yup from 'yup';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { useAddContactMutation, useGetContactsQuery } from 'redux/contactsApi';\nimport Loader from 'components/Loader/Loader';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst options = {\n  width: '320px',\n  fontSize: '20px',\n  clickToClose: true,\n  position: 'right-top',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 3000,\n  showOnlyTheLastOne: true,\n  pauseOnHover: true,\n};\n\nexport const ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n\n  const [addContact, { isLoading: isAddingContact }] = useAddContactMutation();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const isContactExists = contacts.some(\n      contact =>\n        (contact.name &&\n          contact.name.toLowerCase().trim() ===\n            values.name.toLowerCase().trim()) ||\n        (contact.number && contact.number.trim() === values.number.trim())\n    );\n    if (isContactExists) {\n      Notify.failure(`${values.name} is already in contacts`, options);\n      resetForm();\n      return;\n    }\n      const newContact = {\n        id: nanoid(), \n        name: values.name,\n        number: values.number,\n      };\n\n    addContact(newContact);\n    resetForm();\n  };\n\n\n  const validationSchema = yup.object().shape({\n    name: yup\n      .string()\n      .min(3, 'Name must be at least 3 characters')\n      .max(30, 'Name must be at most 20 characters')\n      .matches(\n        /^[А-Яа-яЁёіІїЇґҐa-zA-Z]+([-\\s][А-Яа-яЁёіІїЇґҐa-zA-Z]+)*$/,\n        'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d`Artagnan'\n      )\n      .required('Name is required'),\n    number: yup\n      .string()\n      .min(7, 'Number must be at least 7 characters')\n      .max(20, 'Number must be at most 13 characters')\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      )\n      .required('Number is required'),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {() => (\n        <>\n          {isAddingContact && <Loader />} <FormContext />\n        </>\n      )}\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  padding: 0;\n  list-style: none;\n  width: 500px;\n \n`;\n\n\nexport const Item = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: space-between;\npadding: 10px;\nborder-bottom: 1px solid #ccc;\nbox-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\ntransition: all 0.2s ease;\n\n&:last-of-type {\n  border-bottom: none;\n}\n\n&:hover {\n  transform: scale(1.05);\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);\n}\n`;\n\nexport const Name = styled.span`\n  max-width: 170px;\n\n  font-size: 30px;\n  font-weight: bold;\n  // margin-right: 15px;\n`;\nexport const Number = styled.span`\n// margin-right: 15px;\nfont-size: 30px;\n`;\n\nexport const Delete = styled.button`\n  margin-left: 15px;\n  padding: 5px;\n  border: none;\n  background-color: transparent;\n  color: #999;\n  cursor: pointer;\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: #000;\n  }\n`;\nexport const Edit = styled.button`\n  margin-left: 30px;\n  padding: 5px;\n  border: none;\n  background-color: transparent;\n  color: #999;\n  cursor: pointer;\n  transition: color 0.2s ease;\n\n  &:hover {\n    color: #000;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n\nexport const Input = styled.input`\n  padding: 8px;\n  border: 1px solid #ccc;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  font-size: 24px;\n  width: 100%;\n  min-width: 300px;\n  margin-top: 5px;\n  transition: all 0.4s ease-in-out;\n  box-sizing: border-box;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  background-color: #444;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  font-size: 20px;\n  font-weight: bold;\n  cursor: pointer;\n  text-transform: uppercase;\n  box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);\n  transition: all 0.4s ease-in-out;\n  width: 48%;\n\n  &:hover {\n    background-color: #333;\n    transform: scale(1.05);\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nexport const EditWrap = styled.div`\nwidth: 350px;\n\n`;\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { useCallback, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport {\n  Overlay,\n  ModalContent,\n  Input,\n  Button,\n  EditWrap,\n  ButtonWrapper,\n} from 'components/Modal/Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ isOpen, onClose, editedContact, handleSaveEdit }) => {\n  const [updatedContact, setUpdatedContact] = useState(editedContact);\n\n  useEffect(() => {\n    setUpdatedContact(prevContact => ({\n      ...prevContact,\n      ...editedContact,\n    }));\n  }, [editedContact]);\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setUpdatedContact(prevContact => ({\n      ...prevContact,\n      [name]: value,\n    }));\n  };\n\n  const handleSave = () => {\n    handleSaveEdit(updatedContact);\n  };\n\n  const handleKeyDown = useCallback(\n    event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    },\n    [onClose]\n  );\n\n  const handleBackdropClick = event => {\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      const handleKeyDown = event => {\n        if (event.code === 'Escape') {\n          onClose();\n        }\n      };\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown, onClose]);\n\n  return createPortal(\n    isOpen ? (\n      <Overlay onClick={handleBackdropClick}>\n        <ModalContent>\n          <EditWrap>\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={updatedContact.name}\n              onChange={handleChange}\n            />\n            <Input\n              type=\"text\"\n              name=\"number\"\n              value={updatedContact.number}\n              onChange={handleChange}\n            />\n            <ButtonWrapper>\n              <Button onClick={handleSave}>Save</Button>\n              <Button onClick={onClose}>Cancel</Button>\n            </ButtonWrapper>\n          </EditWrap>\n        </ModalContent>\n      </Overlay>\n    ) : null,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  editedContact: PropTypes.object,\n  handleSaveEdit: PropTypes.func,\n};\n","import React, { useState } from 'react';\nimport { FiUserMinus, FiEdit } from 'react-icons/fi';\n\nimport { List, Item, Name, Number, Delete, Edit } from './ContactList.styled';\n\nimport {\n  useDeleteContactMutation,\n  useGetContactsQuery,\n  useUpdateContactMutation,\n} from '../../redux/contactsApi';\nimport Loader from 'components/Loader/Loader';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useSelector } from 'react-redux';\nimport { Modal } from 'components/Modal/Modal';\n\n\nexport const ContactList = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editedContact, setEditedContact] = useState(null);\n\n  const openModal = () => setIsModalOpen(true);\n  const closeModal = () => setIsModalOpen(false);\n\n  const { data: contacts, isLoading, error } = useGetContactsQuery();\n\n  const [deleteContacts, { isLoading: isDeletingContact }] =\n    useDeleteContactMutation();\n\n  const filter = useSelector(state => state.filter);\n\n  let filteredContacts = contacts;\n\n  if (filter && filter.trim() !== '') {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    filteredContacts = filteredContacts.filter(\n      contact =>\n        (contact.name &&\n          contact.name.toLowerCase().includes(normalizedFilter)) ||\n        (contact.phone && contact.phone.includes(normalizedFilter))\n    );\n  }\n\n  const handleDelete = id => {\n    deleteContacts(id);\n  };\n  const [updateContact, { isLoading: isUpdatingContact }] =\n    useUpdateContactMutation();\n  const handleEdit = id => {\n    const editedContact = filteredContacts.find(contact => contact.id === id);\n    setEditedContact(editedContact);\n    openModal();\n  };\n\n  const handleSaveEdit = updatedContact => {\n    updateContact({\n      id: updatedContact.id,\n      updatedContact: {\n        name: updatedContact.name,\n        number: updatedContact.number,\n      },\n    })\n      .unwrap()\n      .then(() => {\n        closeModal();\n      })\n      .catch(error => {\n        console.log('Error updating contact:', error);\n      });\n  };\n\n  return (\n    <>\n      {error && <h2>Error: {error.message}</h2>}\n      {isLoading || isUpdatingContact ? (\n        <Loader />\n      ) : (\n        <List>\n          {contacts &&\n            filteredContacts.map(({ name, number, id }) => {\n              return (\n                <Item key={id}>\n                  <Name>{name}:</Name>\n                  <div>\n                    <Number>{number}</Number>\n                    <Edit\n                      type=\"button\"\n                      onClick={() => handleEdit(id)}\n                      aria-label=\"Edit contact\"\n                      disabled={isLoading}\n                    >\n                      <FiEdit size={26} />\n                    </Edit>\n                    <Delete\n                      type=\"button\"\n                      onClick={() => handleDelete(id)}\n                      aria-label=\"Delete contact\"\n                      disabled={isDeletingContact || isLoading}\n                    >\n                      {isDeletingContact ? (\n                        <RotatingLines width=\"26\" strokeColor=\"grey\" />\n                      ) : (\n                        <FiUserMinus size={26} />\n                      )}\n                    </Delete>\n                  </div>\n                </Item>\n              );\n            })}\n        </List>\n      )}\n\n      {editedContact && (\n        <Modal\n          isOpen={isModalOpen}\n          onClose={closeModal}\n          editedContact={editedContact}\n          handleSaveEdit={handleSaveEdit}\n        />\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 500px;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 22px;\n  font-weight: bold;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 8px;\n  border: 1px solid #ccc;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);\n  border-radius: 5px;\n  font-size: 20px;\n  width: 100%;\n  max-width: 500px;\n  margin-top: 5px;\n  transition: all 0.4s ease-in-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.4);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterContainer, FilterLabel, FilterInput } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <FilterContainer>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          onChange={handleChange}\n          placeholder=\"Search contacts by name\"\n        />\n      </FilterLabel>\n    </FilterContainer>\n  );\n};\n  ","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, Title } from 'components/App.styled';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nexport default function Contacts() {\n  return (\n    <HelmetProvider>\n      <Container>\n        <Helmet>\n          <title>Your Contacts</title>\n        </Helmet>\n        <Title>Phonebook</Title>\n        <ContactForm />\n        <Title>Contacts</Title>\n        <Filter />\n        <ContactList />\n      </Container>\n    </HelmetProvider>\n  );\n}\n"],"names":["Container","styled","Title","ContainerHome","Forma","Form","Label","Input","Field","Button","Error","ErrorMessage","FormContext","useFormikContext","values","handleChange","errors","touched","handleBlur","isValid","dirty","handleSubmit","onSubmit","id","type","placeholder","name","onBlur","onChange","value","pattern","title","component","number","disabled","options","width","fontSize","clickToClose","position","distance","borderRadius","timeout","showOnlyTheLastOne","pauseOnHover","ContactForm","contacts","useGetContactsQuery","data","useAddContactMutation","addContact","isAddingContact","isLoading","validationSchema","yup","shape","min","max","matches","required","initialValues","resetForm","some","contact","toLowerCase","trim","Notify","newContact","nanoid","Loader","List","Item","Name","Number","Delete","Edit","Overlay","ModalContent","EditWrap","ButtonWrapper","modalRoot","document","querySelector","Modal","isOpen","onClose","editedContact","handleSaveEdit","useState","updatedContact","setUpdatedContact","useEffect","prevContact","event","target","handleKeyDown","useCallback","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","ContactList","isModalOpen","setIsModalOpen","setEditedContact","closeModal","error","useDeleteContactMutation","deleteContacts","isDeletingContact","filter","useSelector","state","filteredContacts","normalizedFilter","includes","phone","useUpdateContactMutation","updateContact","isUpdatingContact","handleEdit","find","message","map","size","handleDelete","strokeColor","unwrap","then","catch","console","log","FilterContainer","FilterLabel","FilterInput","Filter","dispatch","useDispatch","setFilter","Contacts"],"sourceRoot":""}